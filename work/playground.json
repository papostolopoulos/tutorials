{
  "extract": {
    "edgeRules": [],
    "entityNS": null,
    "entityRules": [
      {
        "attributes": [],
        "entityIdRef": "",
        "id": "f66018c8-423b-459b-b55a-c639d92daf68",
        "javascript": null,
        "locations": [
          "/"
        ],
        "repeating": true,
        "splitCoupons": "true",
        "splitCouponsRegex": ".*:$.*",
        "type": "http://schema.org/Coupon"
      }
    ],
    "extractEmbedded": false,
    "schema": [
      {
        "context": {
          "@type": [
            "Coupon"
          ]
        },
        "ns": "http://schema.org",
        "url": "http://ws.rmf.yahoo.com:4080/rmf/v1/schema?type=schema.org&name=y.2.0&format=json"
      }
    ],
    "source": null
  },
  "extractLn": {
    "edgeRules": [
      {
        "cardinality": "ONE_TO_ONE",
        "from": {
          "entityRule": "b4917ca5-ee83-4569-87c7-37feef5474af",
          "matchAttr": null
        },
        "predicate": "http://schema.org/broker",
        "to": {
          "entityRule": "b4917ca5-ee83-4569-87c7-37feef5474au",
          "matchAttr": null
        }
      },
      {
        "cardinality": "ONE_TO_ONE",
        "from": {
          "entityRule": "b4917ca5-ee83-4569-87c7-37feef5474af",
          "matchAttr": null
        },
        "predicate": "http://schema.org/image",
        "to": {
          "entityRule": "b4917ca5-ee83-4569-87c7-37feef5474aj",
          "matchAttr": null
        }
      }
    ],
    "entityRules": [
      {
        "attributes": [
          {
            "blackList": [],
            "concat": "true",
            "dataTypes": [
              "Text"
            ],
            "javascript": "function transform(data) {\n  if(!data) return null;\n\n\n  var replaceStrings = [\n    {oldStr:/[\\*©®ǂ‡†±→§™¹›]/g, newStr: \"\"},\n    {oldStr: /STARTS\\sTODAY/i, newStr: \"\"},\n    {oldStr: /\\|\\sSHOP\\sSALE(\\syep.*)$/i, newStr: \"\"},\n    {oldStr: /^Also,\\sthis\\sperk:/i, newStr: \"\"},\n    {oldStr: /^Plus,/i, newStr: \"\"},\n    {oldStr: /(|\\s)?SHOP\\sNOW.*/i, newStr: \"\"},\n    {oldStr: /.*oldnavy\\.com\\/supercash.*/i, newStr: \"\"},\n    {oldStr: /\\|\\sSHOP\\sSALE/i, newStr: \"\"},\n    {oldStr: /FIND\\sYOUR\\sSTORE$/i, newStr: \"\"},\n    {oldStr: /(\\|\\s)?(Exclusions|Restrictions)(\\smay)?\\sapply\\.\\s(See)?\\sDetails\\sbelow\\.?/i, newStr: \"\"},\n    {oldStr: /Or\\sshow\\scashier\\sbarcode.*/i, newStr: \"\"},\n    {oldStr: /\\|\\sFIND\\sA\\sSTORE/i, newStr: \"\"},\n    {oldStr: /Valid\\sUntil.*/i, newStr: \"\"},\n    {oldStr: /If\\syou\\shave\\sany\\squestions.*/i, newStr: \"\"},\n    {oldStr: /rn\\s\\(!\\)/i, newStr: \"\"},\n    {oldStr: /.*Plus,\\senjoy\\sthis\\sperk:/i, newStr: \"\"},\n    {oldStr: /So\\.\\sMany\\.\\sPerks\\.\\sSay\\shi\\sto\\.\\.\\./i, newStr: \"\"},\n    {oldStr: /^WHAT'S\\sBETTER.*Plus,/i, newStr: \"\"},\n    {oldStr: /^Come\\ssee.*PLUS,/i, newStr: \"\"},\n    {oldStr: /Plus,\\sso\\smuch\\s\\$/i, newStr: \"\"},\n    {oldStr: /^((Hey,\\swhat's\\sup)|(Hi,\\snice\\sto)).*Plus,/i, newStr: \"\"},\n    {oldStr: /SCORE\\sNOW$/i, newStr: \"\"},\n    {oldStr: /Cannot\\sbe\\scombined.*/i, newStr: \"\"},\n    {oldStr: /Limited\\stime\\sonly.*/i, newStr: \"\"},\n    {oldStr: /Use\\scode\\s\\w+/i, newStr: \"\"},\n    {oldStr: /USE\\sCODE(\\s+)?$/i, newStr: \"\"},\n    {oldStr: /(\\|\\s)Details\\sbelow\\./i, newStr: \"\"},\n    {oldStr: /^Also,?/i, newStr: \"\"},\n    {oldStr: /OLD\\sNAVY\\sOUTLET.*Premium\\sOutlets/i, newStr: \"\"},\n    {oldStr: /APPLY NOW/i, newStr: \"\"},\n    {oldStr: /BARCODE(\\s\\w+)/i, newStr: \"$1\"},\n    {oldStr: /New\\sstore\\sreopening.*(get\\s\\$\\d{1,2})/i, newStr: \"$1\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    //{oldStr: //i, newStr: \"\"},\n    {oldStr: /\\|(\\s)?$/i, newStr: \"\"},\n  ];\n\n  replaceStrings.forEach(function(el) {\n    data = data.replace(el.oldStr, el.newStr);\n  });\n\n return data.trim();\n}",
            "listOfValidNodeTypes": [
              {
                "name": "TEXT",
                "type": "node"
              },
              {
                "name": "ALT",
                "type": "attr"
              },
              {
                "name": "HREF",
                "type": "attr"
              }
            ],
            "location": [
              {
                "xpath": ""
              }
            ],
            "mandatory": "true",
            "maxLength": "200",
            "minLength": "4",
            "allowEmpty": "false",
            "passThroughout": "true",
            "similarityScore": "1.1",
            "name": "http://schema.org/description",
            "whiteList": [
              {
                "value": "(?i)free\\sshipping",
                "type": "REGEX"
              },
              {
                "value": "\\$\\d+(\\.\\d{1,2})?\\s([Oo][Ff]{2})",
                "type": "REGEX"
              },
              {
                "value": "%\\s([Oo][Ff]{2})",
                "type": "REGEX"
              },
              {
                "value": "(?i)%\\ssavings",
                "type": "REGEX"
              },
              {
                "value": "(?i)extra\\s\\d{1,2}%",
                "type": "REGEX"
              },
              {
                "value": "(?i)up\\sto\\s\\d{1,2}%",
                "type": "REGEX"
              },
              {
                "value": "((SAVE)|(Save))\\s\\d{1,2}%",
                "type": "REGEX"
              },
              {
                "value": "((SAVE)|(Save))\\s\\$\\d{1,2}",
                "type": "REGEX"
              },
              {
                "value": "(?i)savings\\sof\\s\\$",
                "type": "REGEX"
              },
              {
                "value": "(?i)\\$\\d{1,3}\\sreward",
                "type": "REGEX"
              },
              {
                "value": "(?i)down\\sto\\s\\$\\d{1,}(\\.\\d{2})?",
                "type": "REGEX"
              },
              {
                "value": "(?i)\\(\\?$\\d{1,4}\\svalue\\)?",
                "type": "REGEX"
              },
              {
                "value": "(?i)\\$\\d+(\\.\\d{2})?\\sdiscount",
                "type": "REGEX"
              },
              {
                "value": "(?i)discount\\sof\\s\\$\\d+(\\.\\d{2})?",
                "type": "REGEX"
              },
              {
                "value": "(?i)discount\\sof\\s\\d+%",
                "type": "REGEX"
              },
              {
                "value": "(?i)\\d+%\\sdiscount",
                "type": "REGEX"
              },
              {
                "value": "(?i)discounted\\sby\\s\\$?\\d{1,2}%?",
                "type": "REGEX"
              },
              {
                "value": "(?i)free\\son\\sorders\\sof\\s\\$",
                "type": "REGEX"
              },
              {
                "value": "(?i)earn\\s\\d+\\spoints",
                "type": "REGEX"
              },
              {
                "value": "(?i)every\\s$\\d+",
                "type": "REGEX"
              }
            ]
          },
          {
            "blackList": [
              {
                "value": "sale ends",
                "type": "SUBSTRING"
              },
              {
                "value": "valid through",
                "type": "SUBSTRING"
              },
              {
                "value": "ends",
                "type": "SUBSTRING"
              },
              {
                "value": "starts\\stomorrow,",
                "type": "REGEX"
              }
            ],
            "dataTypes": [
              "DateTime"
            ],
            "javascript": "function transform(data){\n  if (data) {\n    var monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var regex = /(\\s*\\d+)\\/(\\s*\\d+)/i;\n    var match = regex.exec(data);\n    if (match && match[1]) {\n      return monthNames[match[1] - 1] + ', ' + match[2];\n    }\n    else{\n      return data;\n    }\n  }\n\n  return null;\n}",
            "listOfValidNodeTypes": [],
            "location": [
              {
                "xpath": ""
              }
            ],
            "mandatory": "true",
            "maxLength": "-1",
            "minLength": "-1",
            "name": "http://schema.org/validThrough",
            "whiteList": []
          },
          {
            "blackList": [
              {
                "type": "SUBSTRING",
                "value": "sale ends"
              },
              {
                "type": "SUBSTRING",
                "value": "valid through"
              },
              {
                "type": "SUBSTRING",
                "value": "ends"
              }
            ],
            "dataTypes": [
              "DateTime"
            ],
            "javascript": "function transform(data) {if (data) {var monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];var regex = /(\\s*\\d+)\\/(\\s*\\d+)/i;var match = regex.exec(data);if (match && match[1]) {return monthNames[match[1] - 1] + ', ' + match[2];}else{return data;}}return null;}",
            "listOfValidNodeTypes": null,
            "location": null,
            "mandatory": "true",
            "maxLength": -1,
            "minLength": -1,
            "name": "http://schema.org/validFrom"
          },
          {
            "blackList": [
              {
                "type": "REGEX",
                "value": "\\$.*off$"
              }
            ],
            "dataTypes": [
              "Number"
            ],
            "javascript": null,
            "listOfValidNodeTypes": null,
            "location": null,
            "mandatory": "true",
            "maxLength": -1,
            "minLength": -1,
            "name": "http://schema.org/offerPrice",
            "whiteList": [
              {
                "type": "SUBSTRING",
                "value": "Free shipping"
              }
            ]
          },
          {
            "blackList": [
              {
                "type": "REGEX",
                "value": "\\$.*off$"
              }
            ],
            "dataTypes": [
              "Number"
            ],
            "javascript": null,
            "listOfValidNodeTypes": null,
            "location": null,
            "mandatory": "true",
            "maxLength": -1,
            "minLength": -1,
            "name": "http://schema.org/originalPrice",
            "whiteList": [
              {
                "type": "SUBSTRING",
                "value": "Free shipping"
              }
            ]
          },
          {
            "blackList": null,
            "dataTypes": [
              "Text"
            ],
            "javascript": "function transform(data){content=data.trim();if(content&&content.startsWith('C$')){return'CAD'}else if(content&&content.startsWith('$')){return'USD'}else{return null}};",
            "listOfValidNodeTypes": null,
            "location": null,
            "mandatory": "true",
            "maxLength": -1,
            "minLength": -1,
            "name": "http://schema.org/priceCurrency",
            "whiteList": null
          },
          {
            "blackList": null,
            "dataTypes": [
              "Text"
            ],
            "javascript": "",
            "listOfValidNodeTypes": null,
            "location": null,
            "mandatory": "true",
            "maxLength": -1,
            "minLength": -1,
            "name": "http://schema.org/url",
            "whiteList": null
          }
        ],
        "bundleInfo": {
          "minBundleSize": "-1",
          "maxBundleSize": "-1",
          "minLeafNodesSize": "-1",
          "maxLeafNodesSize": "-1",
          "maxDepth": "-1",
          "defaultPatternAnnotationThreshold": "0.8",
          "linkThreshold": "2",
          "dedupCondition": {
            "matchThreshold": 0.3,
            "stopWords": [
              "4 BRANDS",
              "EASY CHECKOUT",
              "100% cotton"
            ]
          },
          "listOfValidNodeTypes": [],
          "linkMatcher": [
            {
              "regex": ".*"
            }
          ]
        },
        "id": "b4917ca5-ee83-4569-87c7-37feef5474af",
        "javascript": null,
        "type": "http://schema.org/Coupon"
      },
      {
        "attributes": [
          {
            "dataTypes": [
              "Text"
            ],
            "javascript": null,
            "location": [
              {
                "xpath": "\"OLD NAVY\""
              }
            ],
            "mandatory": "true",
            "name": "http://schema.org/name",
            "minLength": "",
            "maxLength": "",
            "whiteList": [],
            "blackList": [],
            "listOfValidNodeTypes": []
          }
        ],
        "bundleInfo": {
          "clusterAlgo": {
            "endIdx": -1,
            "regex": "",
            "replaceInfo": [
              {
                "regexStr": "",
                "replaceAll": "true",
                "replacement": ""
              }
            ],
            "startIdx": 0,
            "type": "SUBSTRING"
          },
          "linkMatcher": [
            {
              "regex": ".*"
            }
          ],
          "listOfValidNodeTypes": null,
          "maxBundleSize": -1,
          "maxDepth": -1,
          "maxLeafNodesSize": -1,
          "minBundleSize": -1,
          "minLeafNodesSize": -1,
          "defaultPatternAnnotationThreshold": 0.8,
          "linkThreshold": 2
        },
        "id": "b4917ca5-ee83-4569-87c7-37feef5474au",
        "javascript": null,
        "type": "http://schema.org/Organization"
      },
      {
        "attributes": [
          {
            "blackList": null,
            "dataTypes": [
              "Text"
            ],
            "javascript": "",
            "listOfValidNodeTypes": null,
            "location": null,
            "mandatory": "true",
            "maxLength": -1,
            "minLength": -1,
            "name": "http://schema.org/url",
            "whiteList": null
          }
        ],
        "bundleInfo": {
          "clusterAlgo": {
            "endIdx": -1,
            "regex": "",
            "replaceInfo": [
              {
                "regexStr": "",
                "replaceAll": "true",
                "replacement": ""
              }
            ],
            "startIdx": 0,
            "type": "SUBSTRING"
          },
          "linkMatcher": null,
          "listOfValidNodeTypes": null,
          "maxBundleSize": -1,
          "maxDepth": -1,
          "maxLeafNodesSize": -1,
          "minBundleSize": -1,
          "minLeafNodesSize": -1,
          "linkThreshold": 2,
          "footerPercentage": 0.6,
          "overRideValidThroughFromFooter": false,
          "defaultPatternAnnotationThreshold": 0.8
        },
        "id": "b4917ca5-ee83-4569-87c7-37feef5474aj",
        "javascript": null,
        "type": "http://schema.org/ImageObject"
      }
    ]
  },
  "metaData": {
    "debug": "true",
    "linkAlgoHandler": "LinkExtractor15",
    "decodeHtmlEntity": "true"
  }
}
